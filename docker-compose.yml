version: "3"

services:

  prefect:
    image: prefecthq/prefect:2.14-python3.11
    command: prefect server start
    environment:
      - PREFECT_SERVER_API_HOST=0.0.0.0
      - PREFECT_API_DATABASE_CONNECTION_URL=postgresql+asyncpg://${PREFECT_DB_USER}:${PREFECT_DB_PW}@prefect_db:5432/${PREFECT_DB_NAME} # Needed if using postgres and not sqlite
      - PREFECT_LOGGING_LEVEL=DEBUG
    ports:
      - 127.0.0.1:4200:4200
    depends_on:
      - prefect_db
    networks:
      mle_net:


  prefect_db:
    image: postgres:14.5-alpine
    environment:
      - POSTGRES_USER=${PREFECT_DB_USER}
      - POSTGRES_PASSWORD=${PREFECT_DB_PW}
      - POSTGRES_DB=${PREFECT_DB_NAME}
    volumes:
      - ./data/prefect_db:/var/lib/postgresql/data:rw
    restart: unless-stopped
    networks:
      mle_net:


  mongo:
    image: mongo:4.4
    restart: always
    container_name: "mongodb"
    working_dir: "/database/"
    environment:
      MONGO_INITDB_ROOT_USERNAME: '${MONGO_DB_USERNAME}'
      MONGO_INITDB_ROOT_PASSWORD: '${MONGO_DB_PASSWORD}'
    volumes:
      - "${PWD}/database/:/data/db"
      - ./mongo_import.sh:/docker-entrypoint-initdb.d/mongo_import.sh
      - "${PWD}/data/dump:/dump"
    networks:
      mle_net:

  content-api:
    image: mlexchange1/content-api:1.2
    restart: "unless-stopped"
    container_name: "content-api"
    environment:
      MONGO_INITDB_ROOT_USERNAME: '${MONGO_DB_USERNAME}'
      MONGO_INITDB_ROOT_PASSWORD: '${MONGO_DB_PASSWORD}'
    ports:
      - 127.0.0.1:8000:8000
    depends_on:
      - "mongo"
    networks:
      mle_net:


  content-registry:
    image: mlexchange1/content-registry:1.4
    restart: "unless-stopped"
    container_name: "content-registry"
    environment:
      MONGO_INITDB_ROOT_USERNAME: '${MONGO_DB_USERNAME}'
      MONGO_INITDB_ROOT_PASSWORD: '${MONGO_DB_PASSWORD}'
      CONTAINER_WORKING_DIR: '${PWD}/data'
    ports:
      - 127.0.0.1:8051:8051
    depends_on:
      - content-api
    networks:
      mle_net:


networks:
  mle_net:
    driver: bridge
